{"ast":null,"code":"const express=require(\"express\");const multer=require(\"multer\");const cors=require(\"cors\");const path=require(\"path\");const fs=require(\"fs\");const bcrypt=require(\"bcrypt\");const db=require(\"./db\");const app=express();const PORT=3010;app.use(cors());app.use(express.json());app.use(\"/uploads\",express.static(path.join(__dirname,\"uploads\")));// Multer config\nconst storage=multer.diskStorage({destination:\"uploads/\",filename:(req,file,cb)=>{const uniqueName=Date.now()+path.extname(file.originalname);cb(null,uniqueName);}});const upload=multer({storage});// Upload de imagem\napp.post(\"/upload\",upload.single(\"image\"),(req,res)=>{const{name,description}=req.body;const filename=req.file.filename;const createdAt=new Date().toISOString();db.run(\"INSERT INTO images (name, description, filename, created_at) VALUES (?, ?, ?, ?)\",[name,description,filename,createdAt],function(err){if(err)return res.status(500).send(err.message);res.json({id:this.lastID,name,description,filename,created_at:createdAt});});});// Atualizar imagem\napp.put(\"/images/:id\",upload.single(\"image\"),(req,res)=>{var _req$file;const{id}=req.params;const{name,description}=req.body;const newFile=(_req$file=req.file)===null||_req$file===void 0?void 0:_req$file.filename;db.get(\"SELECT filename FROM images WHERE id = ?\",[id],(err,row)=>{if(err)return res.status(500).send(err.message);if(!row)return res.status(404).send(\"Imagem não encontrada\");const oldFilePath=path.join(__dirname,\"uploads\",row.filename);const query=newFile?\"UPDATE images SET name = ?, description = ?, filename = ? WHERE id = ?\":\"UPDATE images SET name = ?, description = ? WHERE id = ?\";const params=newFile?[name,description,newFile,id]:[name,description,id];db.run(query,params,function(err){if(err)return res.status(500).send(err.message);if(newFile&&fs.existsSync(oldFilePath)){fs.unlink(oldFilePath,()=>{});}res.send({id,name,description,filename:newFile||row.filename});});});});// Registrar usuário\napp.post(\"/register\",async(req,res)=>{const{username,password}=req.body;if(!username||!password)return res.status(400).send(\"Campos obrigatórios\");try{const password_hash=await bcrypt.hash(password,10);db.run(\"INSERT INTO users (username, password_hash) VALUES (?, ?)\",[username,password_hash],function(err){if(err)return res.status(500).send(\"Erro ao registrar\");res.status(201).send(\"Usuário registrado com sucesso\");});}catch(err){res.status(500).send(\"Erro no servidor\");}});// Login\napp.post(\"/login\",(req,res)=>{const{username,password}=req.body;db.get(\"SELECT * FROM users WHERE username = ?\",[username],async(err,user)=>{if(err||!user)return res.status(401).send(\"Usuário não encontrado\");const match=await bcrypt.compare(password,user.password_hash);if(!match)return res.status(401).send(\"Senha incorreta\");res.send(\"Login bem-sucedido\");});});// Listar imagens\napp.get(\"/images\",(req,res)=>{const search=req.query.q||\"\";const page=parseInt(req.query.page)||1;const limit=parseInt(req.query.limit)||10;const offset=(page-1)*limit;const like=\"%\".concat(search,\"%\");const sort=req.query.sort||\"recent\";let orderBy=\"id DESC\";if(sort===\"oldest\")orderBy=\"id ASC\";if(sort===\"az\")orderBy=\"name COLLATE NOCASE ASC\";if(sort===\"za\")orderBy=\"name COLLATE NOCASE DESC\";const queryData=\"\\n    SELECT * FROM images\\n    WHERE name LIKE ? OR description LIKE ?\\n    ORDER BY \".concat(orderBy,\"\\n    LIMIT ? OFFSET ?\\n  \");const queryCount=\"\\n    SELECT COUNT(*) as total FROM images\\n    WHERE name LIKE ? OR description LIKE ?\\n  \";db.all(queryData,[like,like,limit,offset],(err,rows)=>{if(err)return res.status(500).send(err.message);db.get(queryCount,[like,like],(err2,result)=>{if(err2)return res.status(500).send(err2.message);res.json({data:rows,total:result.total});});});});// Deletar imagem\napp.delete(\"/images/:id\",(req,res)=>{const{id}=req.params;db.get(\"SELECT filename FROM images WHERE id = ?\",[id],(err,row)=>{if(err)return res.status(500).send(err.message);if(!row)return res.status(404).send(\"Imagem não encontrada\");const filePath=path.join(__dirname,\"uploads\",row.filename);db.run(\"DELETE FROM images WHERE id = ?\",[id],err=>{if(err)return res.status(500).send(err.message);if(fs.existsSync(filePath)){fs.unlink(filePath,()=>{});}res.sendStatus(204);});});});app.listen(PORT,()=>{console.log(\"\\uD83D\\uDE80 Servidor rodando em http://localhost:\".concat(PORT));});","map":{"version":3,"names":["express","require","multer","cors","path","fs","bcrypt","db","app","PORT","use","json","static","join","__dirname","storage","diskStorage","destination","filename","req","file","cb","uniqueName","Date","now","extname","originalname","upload","post","single","res","name","description","body","createdAt","toISOString","run","err","status","send","message","id","lastID","created_at","put","_req$file","params","newFile","get","row","oldFilePath","query","existsSync","unlink","username","password","password_hash","hash","user","match","compare","search","q","page","parseInt","limit","offset","like","concat","sort","orderBy","queryData","queryCount","all","rows","err2","result","data","total","delete","filePath","sendStatus","listen","console","log"],"sources":["C:/Users/Anderson/Desktop/React/meu-projeto/src/index.js"],"sourcesContent":["const express = require(\"express\");\r\nconst multer = require(\"multer\");\r\nconst cors = require(\"cors\");\r\nconst path = require(\"path\");\r\nconst fs = require(\"fs\");\r\nconst bcrypt = require(\"bcrypt\");\r\nconst db = require(\"./db\");\r\n\r\nconst app = express();\r\nconst PORT = 3010;\r\n\r\napp.use(cors());\r\napp.use(express.json());\r\napp.use(\"/uploads\", express.static(path.join(__dirname, \"uploads\")));\r\n\r\n// Multer config\r\nconst storage = multer.diskStorage({\r\n  destination: \"uploads/\",\r\n  filename: (req, file, cb) => {\r\n    const uniqueName = Date.now() + path.extname(file.originalname);\r\n    cb(null, uniqueName);\r\n  },\r\n});\r\nconst upload = multer({ storage });\r\n\r\n// Upload de imagem\r\napp.post(\"/upload\", upload.single(\"image\"), (req, res) => {\r\n  const { name, description } = req.body;\r\n  const filename = req.file.filename;\r\n  const createdAt = new Date().toISOString();\r\n\r\n  db.run(\r\n    \"INSERT INTO images (name, description, filename, created_at) VALUES (?, ?, ?, ?)\",\r\n    [name, description, filename, createdAt],\r\n    function (err) {\r\n      if (err) return res.status(500).send(err.message);\r\n      res.json({\r\n        id: this.lastID,\r\n        name,\r\n        description,\r\n        filename,\r\n        created_at: createdAt,\r\n      });\r\n    }\r\n  );\r\n});\r\n\r\n// Atualizar imagem\r\napp.put(\"/images/:id\", upload.single(\"image\"), (req, res) => {\r\n  const { id } = req.params;\r\n  const { name, description } = req.body;\r\n  const newFile = req.file?.filename;\r\n\r\n  db.get(\"SELECT filename FROM images WHERE id = ?\", [id], (err, row) => {\r\n    if (err) return res.status(500).send(err.message);\r\n    if (!row) return res.status(404).send(\"Imagem não encontrada\");\r\n\r\n    const oldFilePath = path.join(__dirname, \"uploads\", row.filename);\r\n\r\n    const query = newFile\r\n      ? \"UPDATE images SET name = ?, description = ?, filename = ? WHERE id = ?\"\r\n      : \"UPDATE images SET name = ?, description = ? WHERE id = ?\";\r\n    const params = newFile\r\n      ? [name, description, newFile, id]\r\n      : [name, description, id];\r\n\r\n    db.run(query, params, function (err) {\r\n      if (err) return res.status(500).send(err.message);\r\n      if (newFile && fs.existsSync(oldFilePath)) {\r\n        fs.unlink(oldFilePath, () => {});\r\n      }\r\n      res.send({ id, name, description, filename: newFile || row.filename });\r\n    });\r\n  });\r\n});\r\n\r\n// Registrar usuário\r\napp.post(\"/register\", async (req, res) => {\r\n  const { username, password } = req.body;\r\n  if (!username || !password)\r\n    return res.status(400).send(\"Campos obrigatórios\");\r\n\r\n  try {\r\n    const password_hash = await bcrypt.hash(password, 10);\r\n    db.run(\r\n      \"INSERT INTO users (username, password_hash) VALUES (?, ?)\",\r\n      [username, password_hash],\r\n      function (err) {\r\n        if (err) return res.status(500).send(\"Erro ao registrar\");\r\n        res.status(201).send(\"Usuário registrado com sucesso\");\r\n      }\r\n    );\r\n  } catch (err) {\r\n    res.status(500).send(\"Erro no servidor\");\r\n  }\r\n});\r\n\r\n// Login\r\napp.post(\"/login\", (req, res) => {\r\n  const { username, password } = req.body;\r\n\r\n  db.get(\r\n    \"SELECT * FROM users WHERE username = ?\",\r\n    [username],\r\n    async (err, user) => {\r\n      if (err || !user) return res.status(401).send(\"Usuário não encontrado\");\r\n\r\n      const match = await bcrypt.compare(password, user.password_hash);\r\n      if (!match) return res.status(401).send(\"Senha incorreta\");\r\n\r\n      res.send(\"Login bem-sucedido\");\r\n    }\r\n  );\r\n});\r\n\r\n// Listar imagens\r\napp.get(\"/images\", (req, res) => {\r\n  const search = req.query.q || \"\";\r\n  const page = parseInt(req.query.page) || 1;\r\n  const limit = parseInt(req.query.limit) || 10;\r\n  const offset = (page - 1) * limit;\r\n  const like = `%${search}%`;\r\n  const sort = req.query.sort || \"recent\";\r\n\r\n  let orderBy = \"id DESC\";\r\n  if (sort === \"oldest\") orderBy = \"id ASC\";\r\n  if (sort === \"az\") orderBy = \"name COLLATE NOCASE ASC\";\r\n  if (sort === \"za\") orderBy = \"name COLLATE NOCASE DESC\";\r\n\r\n  const queryData = `\r\n    SELECT * FROM images\r\n    WHERE name LIKE ? OR description LIKE ?\r\n    ORDER BY ${orderBy}\r\n    LIMIT ? OFFSET ?\r\n  `;\r\n  const queryCount = `\r\n    SELECT COUNT(*) as total FROM images\r\n    WHERE name LIKE ? OR description LIKE ?\r\n  `;\r\n\r\n  db.all(queryData, [like, like, limit, offset], (err, rows) => {\r\n    if (err) return res.status(500).send(err.message);\r\n    db.get(queryCount, [like, like], (err2, result) => {\r\n      if (err2) return res.status(500).send(err2.message);\r\n      res.json({ data: rows, total: result.total });\r\n    });\r\n  });\r\n});\r\n\r\n// Deletar imagem\r\napp.delete(\"/images/:id\", (req, res) => {\r\n  const { id } = req.params;\r\n\r\n  db.get(\"SELECT filename FROM images WHERE id = ?\", [id], (err, row) => {\r\n    if (err) return res.status(500).send(err.message);\r\n    if (!row) return res.status(404).send(\"Imagem não encontrada\");\r\n\r\n    const filePath = path.join(__dirname, \"uploads\", row.filename);\r\n\r\n    db.run(\"DELETE FROM images WHERE id = ?\", [id], (err) => {\r\n      if (err) return res.status(500).send(err.message);\r\n      if (fs.existsSync(filePath)) {\r\n        fs.unlink(filePath, () => {});\r\n      }\r\n      res.sendStatus(204);\r\n    });\r\n  });\r\n});\r\n\r\napp.listen(PORT, () => {\r\n  console.log(`🚀 Servidor rodando em http://localhost:${PORT}`);\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}