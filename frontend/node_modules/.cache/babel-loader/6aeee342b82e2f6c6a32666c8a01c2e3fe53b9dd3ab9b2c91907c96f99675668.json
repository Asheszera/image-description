{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anderson\\\\Desktop\\\\React\\\\meu-projeto\\\\frontend\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this));\napp.put('/images/:id', upload.single('image'), (req, res) => {\n  const {\n    name,\n    description\n  } = req.body;\n  const {\n    id\n  } = req.params;\n  const filename = req.file ? req.file.filename : null;\n  const query = filename ? 'UPDATE images SET name = ?, description = ?, filename = ? WHERE id = ?' : 'UPDATE images SET name = ?, description = ? WHERE id = ?';\n  const params = filename ? [name, description, filename, id] : [name, description, id];\n  db.run(query, params, function (err) {\n    if (err) return res.status(500).send(err.message);\n    res.send({\n      id,\n      name,\n      description,\n      filename\n    });\n  });\n});","map":{"version":3,"names":["React","ReactDOM","App","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","app","put","upload","single","req","res","name","description","body","id","params","filename","file","query","db","run","err","status","send","message"],"sources":["C:/Users/Anderson/Desktop/React/meu-projeto/frontend/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\napp.put('/images/:id', upload.single('image'), (req, res) => {\r\n\r\n    const { name, description } = req.body;\r\n    const { id } = req.params;\r\n    const filename = req.file ? req.file.filename : null;\r\n  \r\n    const query = filename\r\n      ? 'UPDATE images SET name = ?, description = ?, filename = ? WHERE id = ?'\r\n      : 'UPDATE images SET name = ?, description = ? WHERE id = ?';\r\n  \r\n    const params = filename\r\n      ? [name, description, filename, id]\r\n      : [name, description, id];\r\n  \r\n    db.run(query, params, function (err) {\r\n      if (err) return res.status(500).send(err.message);\r\n      res.send({ id, name, description, filename });\r\n    });\r\n  });"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,IAAI,GAAGJ,QAAQ,CAACK,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACTL,OAAA,CAACJ,KAAK,CAACU,UAAU;EAAAC,QAAA,eACfP,OAAA,CAACF,GAAG;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC;AAEDC,GAAG,CAACC,GAAG,CAAC,aAAa,EAAEC,MAAM,CAACC,MAAM,CAAC,OAAO,CAAC,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EAEzD,MAAM;IAAEC,IAAI;IAAEC;EAAY,CAAC,GAAGH,GAAG,CAACI,IAAI;EACtC,MAAM;IAAEC;EAAG,CAAC,GAAGL,GAAG,CAACM,MAAM;EACzB,MAAMC,QAAQ,GAAGP,GAAG,CAACQ,IAAI,GAAGR,GAAG,CAACQ,IAAI,CAACD,QAAQ,GAAG,IAAI;EAEpD,MAAME,KAAK,GAAGF,QAAQ,GAClB,wEAAwE,GACxE,0DAA0D;EAE9D,MAAMD,MAAM,GAAGC,QAAQ,GACnB,CAACL,IAAI,EAAEC,WAAW,EAAEI,QAAQ,EAAEF,EAAE,CAAC,GACjC,CAACH,IAAI,EAAEC,WAAW,EAAEE,EAAE,CAAC;EAE3BK,EAAE,CAACC,GAAG,CAACF,KAAK,EAAEH,MAAM,EAAE,UAAUM,GAAG,EAAE;IACnC,IAAIA,GAAG,EAAE,OAAOX,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACF,GAAG,CAACG,OAAO,CAAC;IACjDd,GAAG,CAACa,IAAI,CAAC;MAAET,EAAE;MAAEH,IAAI;MAAEC,WAAW;MAAEI;IAAS,CAAC,CAAC;EAC/C,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}